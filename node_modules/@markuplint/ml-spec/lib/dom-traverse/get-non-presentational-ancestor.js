"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNonPresentationalAncestor = void 0;
const is_presentational_1 = require("../specs/is-presentational");
const get_computed_role_1 = require("./get-computed-role");
function getNonPresentationalAncestor(
// eslint-disable-next-line @typescript-eslint/prefer-readonly-parameter-types
el, specs, version) {
    var _a;
    let ancestor = el.parentElement;
    /**
     * In ARIA 1.1 and 1.2, the role of an element is not affected by the role of its ancestor elements.
     *
     * It is due to implementation considerations in Markuplint.
     */
    const assumeSingleNode = version !== '1.1' && version !== '1.2';
    while (ancestor) {
        const ancestorRole = (0, get_computed_role_1.getComputedRole)(specs, ancestor, version, assumeSingleNode);
        if (!(0, is_presentational_1.isPresentational)((_a = ancestorRole.role) === null || _a === void 0 ? void 0 : _a.name)) {
            return ancestorRole;
        }
        ancestor = ancestor.parentElement;
    }
    return {
        el: ancestor,
        role: null,
    };
}
exports.getNonPresentationalAncestor = getNonPresentationalAncestor;
