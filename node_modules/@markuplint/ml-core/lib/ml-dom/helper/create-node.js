"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createNode = void 0;
const block_1 = require("../node/block");
const comment_1 = require("../node/comment");
const document_type_1 = require("../node/document-type");
const element_1 = require("../node/element");
const text_1 = require("../node/text");
function createNode(astNode, 
// eslint-disable-next-line @typescript-eslint/prefer-readonly-parameter-types
document) {
    const _astNode = astNode;
    switch (_astNode.type) {
        case 'doctype': {
            return new document_type_1.MLDocumentType(_astNode, document);
        }
        case 'starttag': {
            return new element_1.MLElement(_astNode, document);
        }
        case 'psblock': {
            return new block_1.MLBlock(_astNode, document);
        }
        case 'comment': {
            return new comment_1.MLComment(_astNode, document);
        }
        case 'text': {
            return new text_1.MLText(_astNode, document);
        }
    }
    throw new TypeError(`Invalid AST node types "${astNode.type}"`);
}
exports.createNode = createNode;
