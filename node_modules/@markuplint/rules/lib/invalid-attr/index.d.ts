import type { AttributeType } from '@markuplint/ml-spec';
type Option = {
    /**
     * @since 3.7.0
     */
    allowAttrs?: (string | Attr)[] | Record<string, ValueRule>;
    /**
     * @since 3.7.0
     */
    disallowAttrs?: (string | Attr)[] | Record<string, ValueRule>;
    ignoreAttrNamePrefix?: string | string[];
    allowToAddPropertiesForPretender?: boolean;
    /**
     * @deprecated Since version 3.7.0. Use `allowAttrs` or `disallowAttrs` instead.
     * This option (`attr`) is now considered ambiguous and may lead to confusion.
     * Please use the more explicit `allowAttrs` or `disallowAttrs` option
     * to specify allowed attributes for the `invalid-attr` rule.
     * @see {@link Option.allowAttrs}
     * @see {@link Option.disallowAttrs}
     */
    attrs?: Record<string, ValueRule | {
        disallowed: true;
    }>;
};
type Attr = {
    name: string;
    value: AttributeType | ValueRule;
};
type ValueRule = {
    enum: [string, ...string[]];
} | {
    pattern: string;
} | {
    type: AttributeType;
};
declare const _default: Readonly<import("@markuplint/ml-core").RuleSeed<boolean, Option>>;
export default _default;
