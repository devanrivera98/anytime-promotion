"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ml_core_1 = require("@markuplint/ml-core");
const quoteList = {
    double: '"',
    single: "'",
};
exports.default = (0, ml_core_1.createRule)({
    defaultSeverity: 'warning',
    defaultValue: 'double',
    async verify({ document, report, t }) {
        await document.walkOn('Attr', attr => {
            var _a, _b;
            const message = t('{0} is must {1} on {2}', 'Attribute value', 'quote', `${attr.rule.value} quotation mark`);
            if (attr.isDynamicValue || attr.isDirective || !attr.equal || ((_a = attr.equal) === null || _a === void 0 ? void 0 : _a.raw) === '') {
                return;
            }
            const quote = (_b = attr.startQuote) === null || _b === void 0 ? void 0 : _b.raw;
            if (quote !== quoteList[attr.rule.value]) {
                report({
                    scope: attr,
                    message,
                });
            }
        });
    },
    async fix({ document }) {
        await document.walkOn('Attr', attr => {
            var _a;
            const quote = quoteList[attr.rule.value];
            if (quote && attr.startQuote && attr.startQuote.raw !== quote) {
                attr.startQuote.fix(quote);
                // TODO: attr.endQuote = new MLToken(quote);
                (_a = attr.endQuote) === null || _a === void 0 ? void 0 : _a.fix(quote);
            }
        });
    },
});
