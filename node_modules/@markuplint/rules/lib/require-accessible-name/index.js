"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ml_core_1 = require("@markuplint/ml-core");
const ml_spec_1 = require("@markuplint/ml-spec");
const helpers_1 = require("../helpers");
exports.default = (0, ml_core_1.createRule)({
    defaultOptions: {
        ariaVersion: ml_spec_1.ARIA_RECOMMENDED_VERSION,
    },
    async verify({ document, report, t }) {
        await document.walkOn('Element', el => {
            var _a;
            if (((_a = el.pretenderContext) === null || _a === void 0 ? void 0 : _a.type) === 'pretender') {
                return;
            }
            if ((0, helpers_1.accnameMayBeMutable)(el, document)) {
                return;
            }
            if (!(0, ml_spec_1.isExposed)(el, document.specs, el.rule.options.ariaVersion)) {
                return;
            }
            const computed = (0, ml_core_1.getComputedRole)(document.specs, el, el.rule.options.ariaVersion);
            if (!computed.role) {
                return;
            }
            const roleSpec = (0, ml_core_1.getRoleSpec)(document.specs, computed.role.name, el.namespaceURI, el.rule.options.ariaVersion);
            if (!roleSpec || !roleSpec.accessibleNameRequired) {
                return;
            }
            const hasAccessibleName = !!el.getAccessibleName(el.rule.options.ariaVersion).trim();
            if (!hasAccessibleName) {
                report({ scope: el, message: t('Require {0}', 'accessible name') });
            }
        });
    },
});
