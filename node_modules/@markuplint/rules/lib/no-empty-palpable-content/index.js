"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ml_core_1 = require("@markuplint/ml-core");
const ml_spec_1 = require("@markuplint/ml-spec");
exports.default = (0, ml_core_1.createRule)({
    defaultSeverity: 'warning',
    defaultOptions: {
        extendsExposableElements: true,
        ignoreIfAriaBusy: true,
    },
    async verify({ document, report, t }) {
        await document.walkOn('Element', el => {
            /**
             * Exception
             *
             * - The `textarea` element is possibly empty because a user inputs it.
             */
            if (el.localName === 'textarea') {
                return;
            }
            if (!(0, ml_spec_1.isPalpableElement)(el, el.ownerMLDocument.specs, {
                extendsSvg: false,
                extendsExposableElements: el.rule.options.extendsExposableElements,
            })) {
                return;
            }
            if ((0, ml_spec_1.isNothingContentModel)(el)) {
                return;
            }
            if (el.rule.options.ignoreIfAriaBusy && el.getAttribute('aria-busy') === 'true') {
                return;
            }
            const isEmpty = Array.from(el.childNodes).every(node => node.is(node.TEXT_NODE) && node.isWhitespace());
            if (isEmpty) {
                report({
                    scope: el,
                    message: t('{0} should not {1}', t('the {0}', 'element'), 'empty'),
                });
            }
        });
    },
});
